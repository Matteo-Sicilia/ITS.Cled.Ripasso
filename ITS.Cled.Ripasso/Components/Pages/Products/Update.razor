@page "/products/update/{id:int}"
@using ITS.Cled.Ripasso.Services
@using ITS.Cled.Ripasso.Model

@inject IProductDataService Data
@inject NavigationManager Nav

<h3>Update Product</h3>

<EditForm Model="Input" OnValidSubmit="SaveProduct">
	<DataAnnotationsValidator />

	<div class="form-group">
		<label for="Name">Name</label>
		<InputText id="Name" class="form-control" @bind-Value="Input.Name" />
		<ValidationMessage For="@(() => Input.Name)" />
	</div>

	<div class="form-group">
		<label for="Code">Code</label>
		<InputText id="Code" class="form-control" @bind-Value="Input.Code" />
		<ValidationMessage For="@(() => Input.Code)" />
	</div>

	<div class="form-group">
		<label for="Price">Price</label>
		<InputNumber id="Price" class="form-control" @bind-Value="Input.Price" />
		<ValidationMessage For="@(() => Input.Price)" />
	</div>

	<a href="/products" class="btn btn-secondary">Undo</a>
	<button type="submit" class="btn btn-primary mx-3">Save</button>

</EditForm>

@code {
	[Parameter]
	public int Id {get; set;}

	public Product Input {get; set;} = new();

	protected override async Task OnInitializedAsync()
	{
		var product = await Data.GetProductById(Id);
		if (product == null)
		{
			throw new Exception("Product Not Found");
		}
		else
		{
			Input = product;
		}
	}

	private async Task SaveProduct()
	{
		await Data.UpdateProduct(Input);

		Nav.NavigateTo("/products");
	}
}